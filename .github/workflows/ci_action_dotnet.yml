name: CI_CD_ACTION

on:
  pull_request:
    branches: [ main ]

env:
    DOCKER_REPOSITORY:  ${{ secrets.DOCKER_HUB_USERNAME }}/product_app # name of Docker Hub ID
    IMAGE_NAME: product_app
    IMAGE_TAG: v1 # $GITHUB_RUN_NUMBER

jobs:
  ci-job-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore "./ProductApp.Api/ProductApp.Api.csproj"
      - name: Build
        run: dotnet build "./ProductApp.Api/ProductApp.Api.csproj" --no-restore
      - name: Test
        run: dotnet test "./ProductApp.Tests/ProductApp.Tests.csproj"
      
      - name: Build Docker Image
        run: docker build ./ -t  ${{ secrets.DOCKER_HUB_USERNAME }}/product_app:v1
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Push Image to Docker Hub
        run: docker push  ${{ secrets.DOCKER_HUB_USERNAME }}/product_app:v1
  cd-job-deploy:
    runs-on: ubuntu-latest
    needs: ci-job-build
    steps:
      - name: Create the k8s-deployment for app
        run: kubectl apply -f ./K8S/app_deployment_manifest.yaml
      - name: Create the k8s-deployment for mongo
        run: kubectl apply -f ./K8S/mongodb_deployment_manifest.yaml 
